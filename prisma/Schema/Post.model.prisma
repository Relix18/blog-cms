model Post {
    id              Int            @id @default(autoincrement())
    title           String
    slug            String         @unique
    content         String
    categories      PostCategory[] 
    featuredImage   String?
    published       Boolean        @default(false)
    publishedAt     DateTime?
    author          User           @relation(fields: [authorId], references: [id], onDelete: Cascade)
    authorId        String
    views           Int            @default(0)
    likes           Int            @default(0)
    comments        Comment[]      
    metaTitle       String?
    metaDescription String?
    createdAt       DateTime       @default(now())
    updatedAt       DateTime       @updatedAt
}

model Category {
    id    Int       @id @default(autoincrement())
    name  String    @unique    
    posts PostCategory[] 

}

model Comment {
    id       Int       @id @default(autoincrement())
    content  String
    user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId   String
    postId   Int
    post     Post      @relation(fields: [postId], references: [id], onDelete: Cascade)
    replies  Reply[]  
}

model Reply {
    id        Int      @id @default(autoincrement())
    content   String
    user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId    String
    commentId Int
    comment   Comment  @relation(fields: [commentId], references: [id])
}

model PostCategory {
    post       Post      @relation(fields: [postId], references: [id])
    postId     Int
    category   Category  @relation(fields: [categoryId], references: [id])
    categoryId Int
    @@id([postId, categoryId]) 
}
